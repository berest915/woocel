{"version":3,"sources":["config/firebase.js","context/auth/authContext.js","context/room/roomContext.js","layout/Navbar.js","coms/Login/Login.js","pages/LoginPage/LoginPage.js","StyledComponents/StyledComponents.js","coms/Corsona/Corsona.js","coms/AddRoomAvatarModal/AddRoomAvatarModal.js","coms/Chat/Chat.js","coms/AddRoomModal/AddRoomModal.js","coms/AddRoomModal/useInput.jsx","coms/EachRoom/EachRoom.js","coms/Sidebar/Sidebar.js","img/chat-intro.jpg","coms/ChatInfo/ChatInfo.js","coms/ToggleMobilePortal/ToggleMobilePortal.js","IndexContextProvider/breakpoint.jsx","pages/SuccessPage/SuccessPage.js","coms/NotFound/NotFound.js","pages/NotFoundPage/NotFoundPage.js","coms/Continue/Continue.js","pages/ContinuePage/ContinuePage.js","context/types.js","context/auth/authReducer.js","context/auth/AuthState.js","context/room/roomReducer.js","context/room/RoomState.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","authContext","createContext","roomContext","Navbar","history","useHistory","LST","localStorage","getItem","useContext","isLogin","writeUserInfo","resetAuth","clearChatroomFilter","useEffect","collection","onSnapshot","snapshot","docs","map","doc","docData","data","accessToken","displayName","email","photoURL","signOut","removeItem","push","className","Button","onClick","disabled","Login","setAccessToken","signIn","a","signInWithPopup","then","result","user","credential","setItem","set","console","log","catch","error","alert","message","LoginPage","NoTransitionDiv","styled","div","ReButton","NoneCropDiv","props","completedCrop","pixelRatio","window","devicePixelRatio","getResizedCanvas","canvas","newWidth","newHeight","tmpCanvas","document","createElement","width","height","getContext","drawImage","Corsona","roomId","onCloseModal","useState","readyFile","setReadyFile","triggered","setTriggered","upImg","setUpImg","imgRef","useRef","previewCanvasRef","setCompletedCrop","generateDownload","previewCanvas","crop","toBlob","blob","theBlob","File","lastModified","Date","getTime","type","storageRef","storage","ref","fileStoragePath","name","fileRef","child","put","err","getDownloadURL","url","roomAvatarUrl","merge","fetchFile","unit","aspect","x","y","setCrop","onLoad","useCallback","img","current","image","scaleX","naturalWidth","scaleY","naturalHeight","ctx","setTransform","imageSmoothingQuality","uploadFile","e","target","files","length","reader","FileReader","addEventListener","readAsDataURL","accept","style","display","id","onChange","htmlFor","IconButton","aria-label","component","src","onImageLoaded","c","onComplete","Math","round","AddRoomAvatarModal","isOpen","ReactDOM","createPortal","OVERLAY_STYLES","getElementById","position","top","left","right","bottom","backgroundColor","zIndex","Chat","useParams","messageRef","inputRef","roomName","setRoomName","roomAvatar","setRoomAvatar","messages","setMessages","input","setInput","setIsOpen","unsubscribeOne","room","unsubsribeTwo","unsubscribeThree","orderBy","scrollIntoView","behavior","block","inline","add","timestamp","FieldValue","serverTimestamp","formattedTimestamp","isNewerDate","value","Avatar","toDate","toString","autoFocus","deleteFolderPath","delete","i","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","fnFormatTimestamp","placeholder","preventDefault","AddRoomModal","initialValue","roomname","setRoomname","reset","bind","useInput","handleSubmit","isSelected","onSubmit","EachRoom","path","addNewChat","toggleSelected","lastDate","setLastDate","unsubscribe","getLastDate","to","textDecoration","Sidebar","rooms","setRooms","filteredChatroom","filterChatroom","writeContext_searchRef","searchRef","onClickRoomId","ChatInfo","chatIntroAvatar","href","rel","ToggleModalPortal","defaultValue","BreakpointContext","BreakpointProvider","children","queries","queryMatch","setQueryMatch","mediaQueryLists","keys","Object","handleQueryListener","updateMatches","reduce","acc","media","matches","matchMedia","forEach","addListener","Provider","SuccessPage","isSm","useRouteMatch","breakpoints","context","Error","useBreakpoint","exact","ToggleMobilePortal","NotFound","NotFoundPage","Continue","ContinuePage","WRITE_USER_INFO","SET_LOGIN_STATUS","SET_ACCESS_TOKEN","RESET_AUTH","SET_ROOMS","FILTER_CHATROOM","CLEAR_CHATROOM_FILTER","WRITE_CONTEXT_SEARCH_REF","authReducer","state","action","payload","AuthState","useReducer","AuthReducer","dispatch","roomReducer","filter","replaceText","replace","regex","RegExp","match","RoomState","RoomReducer","onSearchText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","sm","or"],"mappings":";8bAwBMA,G,kBAAcC,IAASC,cAXN,CACrBC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAIXC,EAAKX,EAAYY,YAEjBC,EAAOZ,IAASY,OAChBC,EAAW,IAAIb,IAASY,KAAKE,mBAGpBJ,IC5BAK,EADKC,0BCCLC,EADKD,0BCwELE,EA9DA,WACb,IAAMC,EAAUC,cACVC,EAAMC,aAAaC,QAAQ,SAFd,EAG2BC,qBAAWT,GAAjDU,EAHW,EAGXA,QAASC,EAHE,EAGFA,cAAeC,EAHb,EAGaA,UACxBC,EAAwBJ,qBAAWP,GAAnCW,oBAERC,qBAAU,WAGJR,EACFX,EAAGoB,WAAW,SAASC,YAAW,SAAAC,GAChCA,EAASC,KAAKC,KAAI,SAAAC,GAEhB,IAAIC,EAAUD,EAAIE,OASlB,OARIhB,IAAQe,EAAQE,aAClBZ,EAAc,CACZY,YAAaF,EAAQE,YACrBC,YAAaH,EAAQG,YACrBC,MAAOJ,EAAQI,MACfC,SAAUL,EAAQK,WAGfN,QAIXO,MAGD,CAACrB,IAEJ,IAAMqB,EAAU,WACdd,IACAN,aAAaqB,WAAW,SACxBhB,IACAR,EAAQyB,KAAK,MAGf,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,yBACb,mBAAGA,UAAU,QAAb,uBAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAS,kCAA6BpB,GAAD,YACxC,mBAAGoB,UAAS,2BAAsBpB,GAAO,eAE3C,mBAAGoB,UAAU,OAAb,SAAsBpB,EAAuB,YAAb,aAChC,cAACqB,EAAA,EAAD,CACED,UAAU,aACVE,QAASL,EACTM,UAAWvB,IAAW,EAHxB,6B,iCCGOwB,G,MArDD,WACZ,IAAM9B,EAAUC,cACVC,EAAMC,aAAaC,QAAQ,SAFf,EAIwBC,qBAAWT,GAA7CW,EAJU,EAIVA,cAAewB,EAJL,EAIKA,eAEvBrB,qBAAU,WACRR,GAAOF,EAAQyB,KAAK,eACnB,CAACzB,EAASE,IAEb,IAAM8B,EAAM,uCAAG,sBAAAC,EAAA,sEAEPxC,EACHyC,gBAAgBxC,GAChByC,MAAK,SAAAC,GACJ7B,EAAc6B,EAAOC,MACrBN,EAAeK,EAAOE,WAAWnB,aACjChB,aAAaoC,QAAQ,QAASH,EAAOE,WAAWnB,aAGhD5B,EAAGoB,WAAW,SACXK,IAAIoB,EAAOC,KAAKhB,OAChBmB,IAAI,CACHrB,YAAaiB,EAAOE,WAAWnB,YAC/BC,YAAagB,EAAOC,KAAKjB,YACzBC,MAAOe,EAAOC,KAAKhB,MACnBC,SAAUc,EAAOC,KAAKf,WAEvBa,MAAM,WACLM,QAAQC,IAAI,2CAEbC,OAAO,SAAAC,GACNH,QAAQG,MAAM,iCAAkCA,SAIrDD,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,YA1BjB,OA2Bb9C,EAAQyB,KAAK,QA3BA,2CAAH,qDA8BZ,OACE,mCACE,sBAAKC,UAAU,mBAAf,UACE,mBAAGA,UAAU,oBACb,kDACA,cAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAASI,EAAxC,wCCxCOe,EAZG,WAChB,OACE,mCACE,qBAAKrB,UAAU,QAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,W,0oBCNH,IAAMsB,EAAkBC,IAAOC,IAAV,KAIfC,EAAWF,YAAOtB,IAAPsB,CAAH,KAaRG,EAAcH,IAAOC,IAAV,KACpB,SAAAG,GAAK,OAAKA,EAAMC,eAAP,mBCHPC,EAAaC,OAAOC,kBAAoB,EAE9C,SAASC,EAAiBC,EAAQC,EAAUC,GAC1C,IAAMC,EAAYC,SAASC,cAAc,UAiBzC,OAhBAF,EAAUG,MAAQL,EAClBE,EAAUI,OAASL,EAEPC,EAAUK,WAAW,MAC7BC,UACFT,EACA,EACA,EACAA,EAAOM,MACPN,EAAOO,OACP,EACA,EACAN,EACAC,GAGKC,EAUT,IA0MeO,EA1MC,SAAC,GAA8B,IAAD,IAA3BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAAmB,EACVC,mBAAS,MADC,mBACrCC,EADqC,KAC1BC,EAD0B,OAEVF,oBAAS,GAFC,mBAErCG,EAFqC,KAE1BC,EAF0B,OAGlBJ,qBAHkB,mBAGrCK,EAHqC,KAG9BC,EAH8B,KAItCC,EAASC,iBAAO,MAChBC,EAAmBD,iBAAO,MALY,EAOFR,mBAAS,MAPP,mBAOrClB,EAPqC,KAOtB4B,EAPsB,KAStCC,EAAgB,uCAAG,WAAOC,EAAeC,GAAtB,SAAApD,EAAA,yDAClBoD,GAASD,EADS,iDAKR1B,EAAiB0B,EAAeC,EAAKpB,MAAOoB,EAAKnB,QAEzDoB,QAAO,SAAAC,GAvBlB,IAAoBC,EAwBd/C,QAAQC,IAAI6C,GACZb,GAzBcc,EAyBUD,EAxBrB,IAAIE,KAAK,CAACD,GAwBiB,0BAxBG,CACnCE,cAAc,IAAIC,MAAOC,UACzBC,KAAML,EAAQK,WAgCX,aAnBoB,2CAAH,wDAsBtBnF,qBAAU,WAAM,4CAId,gCAAAuB,EAAA,6DAEQ6D,EAAalH,EAAYmH,UAAUC,MAErCC,EAJN,UAI2B3B,EAJ3B,YAIqCG,EAAUyB,MACvCC,EAAUL,EAAWM,MAAMH,GALnC,SAQQE,EACHE,IAAI5B,GACJtC,MAAK,WACJM,QAAQC,IAAI+B,MAEb9B,OAAM,SAAA2D,GACL7D,QAAQC,IAAI,mCAAoC4D,MAdtD,uBAkBQH,EACHI,iBACApE,MAAK,SAAAqE,GACJjH,EAAGoB,WAAW,SAASK,IAAIsD,GAAQ9B,IACjC,CACEiE,cAAeD,EACfP,mBAEF,CAAES,OAAO,OAGZ/D,OAAM,SAAA2D,GAAG,OACR7D,QAAQC,IACN,yDACA4D,MAhCR,OAmCE/B,IAnCF,4CAJc,sBACTE,GAAcE,GADL,mCA0CdgC,KACC,CAAClC,EAAWH,EAAQK,EAAWJ,IA1EU,MA6EpBC,mBAAS,CAC/BoC,KAAM,IACN3C,MAAO,GACP4C,OAAQ,EACRC,EAAG,GACHC,EAAG,KAlFuC,mBA6ErC1B,EA7EqC,KA6E/B2B,EA7E+B,KAqFtCC,EAASC,uBAAY,SAAAC,GACzBpC,EAAOqC,QAAUD,IAChB,IAEHzG,qBAAU,WACR,GAAK4C,GAAkB2B,EAAiBmC,SAAYrC,EAAOqC,QAA3D,CAIA,IAAMC,EAAQtC,EAAOqC,QACfzD,EAASsB,EAAiBmC,QAC1B/B,EAAO/B,EAEPgE,EAASD,EAAME,aAAeF,EAAMpD,MACpCuD,EAASH,EAAMI,cAAgBJ,EAAMnD,OACrCwD,EAAM/D,EAAOQ,WAAW,MAE9BR,EAAOM,MAAQoB,EAAKpB,MAAQV,EAC5BI,EAAOO,OAASmB,EAAKnB,OAASX,EAE9BmE,EAAIC,aAAapE,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDmE,EAAIE,sBAAwB,OAE5BF,EAAItD,UACFiD,EACAhC,EAAKyB,EAAIQ,EACTjC,EAAK0B,EAAIS,EACTnC,EAAKpB,MAAQqD,EACbjC,EAAKnB,OAASsD,EACd,EACA,EACAnC,EAAKpB,MACLoB,EAAKnB,WAEN,CAACZ,IAEJ,IAAMuE,EAAa,SAAAC,GACjB,GAAIA,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,MAAMC,OAAS,EAAG,CAC/C,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAC9BtD,EAASoD,EAAO9F,WAElB8F,EAAOG,cAAcP,EAAEC,OAAOC,MAAM,MAIxC,OACE,mCACE,sBAAKtG,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBACE4G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClBC,GAAG,mBACH5C,KAAK,OACL6C,SAAUb,IAEZ,uBAAOc,QAAQ,mBAAf,SACE,cAACC,EAAA,EAAD,CACEC,aAAW,iBACXC,UAAU,MACVlH,QAASiG,EAHX,SAKE,cAAC,IAAD,WAKN,qBAAKnG,UAAU,eAAf,SACE,cAACsB,EAAD,UACE,cAAC,IAAD,CACEtB,UAAS,qBAAgBmD,GAAD,UACxBkE,IAAKlE,EACLmE,cAAe/B,EACf5B,KAAMA,EACNqD,SAAU,SAAAO,GAAC,OAAIjC,EAAQiC,IACvBC,WAAY,SAAAD,GAAC,OAAI/D,EAAiB+D,UAKxC,qBAAKvH,UAAU,kBAAf,SACE,8BACE,wBACEA,UAAS,WAAMmD,GAAD,UACdmB,IAAKf,EAELsD,MAAO,CACLtE,MAAOkF,KAAKC,MAAL,iBAAW9F,QAAX,IAAWA,OAAX,EAAWA,EAAeW,aAA1B,QAAmC,GAC1CC,OAAQiF,KAAKC,MAAL,iBAAW9F,QAAX,IAAWA,OAAX,EAAWA,EAAeY,cAA1B,QAAoC,UAMpD,qBAAKxC,UAAU,mBAAf,SACE,cAAC0B,EAAD,CAAaE,cAAeA,EAA5B,SACE,cAACH,EAAD,CACEtB,WAAU,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAeW,UAAS,OAACX,QAAD,IAACA,OAAD,EAACA,EAAeY,QACnDtC,QAAS,WACPuD,EAAiBF,EAAiBmC,QAAS9D,GAC3CsB,GAAa,IAJjB,2CAYJ,cAACzB,EAAD,CAAUzB,UAAU,mBAAmBE,QAAS2C,EAAhD,0BC/NO8E,G,OAfY,SAAC,GAAsC,IAApC/E,EAAmC,EAAnCA,OAAQgF,EAA2B,EAA3BA,OAAQ/E,EAAmB,EAAnBA,aAC5C,OAAK+E,EAEEC,IAASC,aACd,mCACE,qBAAKjB,MAAOkB,GAAZ,SACE,qBAAK/H,UAAU,eAAf,SACE,cAAC,EAAD,CAAS4C,OAAQA,EAAQC,aAAcA,UAI7CR,SAAS2F,eAAe,wBAVN,OAgBhBD,GAAiB,CACrBE,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,oBACjBC,OAAQ,KCgOKC,GAxOF,WAAO,IAAD,MACblK,EAAUC,cACNqE,EAAW6F,cAAX7F,OACF8F,EAAapF,mBACbqF,EAAWrF,mBAET3C,EAAShC,qBAAWT,GAApByC,KANS,EAQemC,mBAAS,IARxB,mBAQV8F,EARU,KAQAC,EARA,OASmB/F,mBAAS,IAT5B,mBASVgG,EATU,KASEC,EATF,OAUejG,mBAAS,IAVxB,mBAUVkG,EAVU,KAUAC,EAVA,OAWSnG,mBAAS,IAXlB,mBAWVoG,EAXU,KAWHC,EAXG,OAYWrG,oBAAS,GAZpB,mBAYV8E,EAZU,KAYFwB,EAZE,KAiBjBpK,qBAAU,WACR,GAAI4D,EAAQ,CAEV,IAAMyG,EAAiBxL,EACpBoB,WAAW,SACXK,IAAIsD,GACJ1D,YAAW,SAAAC,GACV,IAAImK,EAAOnK,EAASK,OACpB8J,GAAQP,EAAcO,EAAKvE,kBAGzBwE,EAAgB1L,EACnBoB,WAAW,SACXK,IAAIsD,GACJ1D,YAAW,SAAAC,GACV,IACE0J,EAAY1J,EAASK,OAAOgF,MAC5B,MAAOtD,GACP5C,EAAQyB,KAAK,YAIbyJ,EAAmB3L,EACtBoB,WAAW,SACXK,IAAIsD,GACJ3D,WAAW,YACXwK,QAAQ,YAAa,OACrBvK,YAAW,SAAAC,GACV8J,EAAY9J,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIE,cAE7C,OAAO,WACL6J,IACAE,IACAC,QAIH,CAAC5G,IAGJ5D,qBAAU,WACJ0J,EAAWhD,SACbgD,EAAWhD,QAAQgE,eAAe,CAChCC,SAAU,OACVC,MAAO,QACPC,OAAQ,eAWd7K,qBAAU,WACJkK,IAMFrL,EAAGoB,WAAW,SAASK,IAAIsD,GAAQ3D,WAAW,YAAY6K,IAAI,CAC5D1I,QAAS8H,EACT1E,KAAM7D,EAAKjB,YACXqK,UAAW5M,IAASW,UAAUkM,WAAWC,kBACzCC,mBAAoB,KACpBC,aAAa,IAGfxB,EAASjD,QAAQ0E,MAAQ,GACzBjB,EAAS,OAEV,CAACD,EAAOtG,EAAQjC,EAAKjB,cA0DxB,OACE,qCACE,sBAAKM,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAACqK,EAAA,EAAD,CAAQhD,IAAKyB,GAAcA,IAC3B,cAAC,EAAD,CACElG,OAAQA,EACRgF,OAAQA,EACR/E,aA9IW,kBAAMuG,GAAU,MAgJ7B,qBAAKpJ,UAAU,OAAf,SACE,qCACE,8BAAI4I,EAAJ,OACA,oBAAG5I,UAAU,WAAb,wBACc,KACX,UAACgJ,EAASA,EAASzC,OAAS,UAA5B,aAAC,EAA+BwD,WAE7B,IAAI9F,KAAJ,UACE+E,EAASA,EAASzC,OAAS,UAD7B,iBACE,EAA+BwD,iBADjC,aACE,EAA0CO,UAC1CC,WAHF,wBASZ,sBAAKvK,UAAU,oBAAf,UACE,cAACkH,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,CAAYsD,WAAS,EAACtK,QApKV,kBAAMkJ,GAAU,IAoK5B,SACE,cAAC,IAAD,MAEF,cAAClC,EAAA,EAAD,CAAYhH,QA/DC,WACf0C,IAIF/E,EAAGoB,WAAW,SACXK,IAAIsD,GACJ1D,YAAW,SAAAC,GACV,IACE,IAAIsL,EAAmBtL,EAASK,OAAO+E,gBAEpBrH,EAAYmH,UAAUC,MACdI,MAAM+F,GACzBC,SACR,MAAOxJ,QAKbrD,EAAGoB,WAAW,SACXK,IAAIsD,GACJ8H,SACAjK,MAAK,WACJM,QAAQC,IAAI,qCAEbC,OAAM,SAAUC,GACfH,QAAQG,MAAM,4BAA6BA,QAqC3C,SACE,cAAC,IAAD,YAMN,qBAAKlB,UAAU,aAAf,SACGgJ,EAAS3J,KAAI,SAAC+B,EAASuJ,GAAO,IAAD,EAEtBT,EAlGY,SAAAH,GACxB,IAAMa,EAAOb,EAAUc,cACjBC,EAAQf,EAAUgB,WAAa,EAC/BC,EAAMjB,EAAUkB,UAChBC,EACJnB,EAAUoB,YAAc,GACpBpB,EAAUoB,WADd,WAEQpB,EAAUoB,YACdC,EACJrB,EAAUsB,cAAgB,GACtBtB,EAAUsB,aADd,WAEQtB,EAAUsB,cACdC,EAASvB,EAAUwB,aAUzB,OALIX,IAASA,EACU,QAEH,UAAMM,EAAN,YAAcE,EAAd,YAAwBE,EAAxB,YAAkCN,EAAlC,YAAyCF,EAAzC,YAAkDF,GA8ErCY,CADX,IAAIvH,KAAJ,UAAS7C,EAAQ2I,iBAAjB,aAAS,EAAmBO,WAG5C,OACE,qBAAahG,IAAKoE,EAAlB,SAEE,sBACE1I,UAAS,wBACPoB,EAAQoD,OAAS7D,EAAKjB,aAAtB,kBAFJ,UAKE,mBAAGM,UAAU,aAAb,SAA2BoB,EAAQoD,OACnC,mBAAGxE,UAAU,aAAb,SAA2BoB,EAAQA,UAEnC,sBAAMpB,UAAU,kBAAhB,SAEGkK,QAZGS,QAqBhB,sBAAK3K,UAAU,eAAf,UACE,cAAC,IAAD,IACA,iCACE,uBACEsE,IAAKqE,EAELxE,KAAK,OACLsH,YAAY,oBAEd,wBAAQvL,QA5JI,SAAAkG,GAClBA,EAAEsF,iBACFvC,EAASR,EAASjD,QAAQ0E,QA0JpB,+BAEF,cAAC,IAAD,W,2GC9LOuB,I,OA7CM,SAAC,GAA8B,IAA5B/D,EAA2B,EAA3BA,OAAQ/E,EAAmB,EAAnBA,aAAmB,ECV3B,SAAA+I,GAAiB,IAAD,EACN9I,mBAAS8I,GADH,mBAC/BC,EAD+B,KACrBC,EADqB,KAGtC,MAAO,CACLD,WACAC,cACAC,MAAO,kBAAMD,EAAY,KACzBE,KAAM,CACJH,WACA7E,SAAU,SAAAZ,GACR0F,EAAY1F,EAAEC,OAAO+D,UDCO6B,CAAS,IAAnCJ,EADyC,EACzCA,SAAUG,EAD+B,EAC/BA,KAAMD,EADyB,EACzBA,MAExB,IAAKnE,EAAQ,OAAO,KAEpB,IAAMsE,EAAe,SAAA9F,GACnBA,EAAEsF,iBAEEG,GACFhO,EAAGoB,WAAW,SACX6K,IAAI,CACHtF,KAAMqH,EACNM,YAAY,EACZpC,UAAW5M,IAASW,UAAUkM,WAAWC,kBACzClF,cAAe,KACfR,gBAAiB,OAGvBwH,IACAlJ,KAGF,OAAOgF,IAASC,aACd,mCACE,qBAAKjB,MAAOkB,GAAZ,SACE,sBAAK/H,UAAU,eAAf,UACE,sBAAMoM,SAAUF,EAAhB,SACE,kCACE,qBAAKlM,UAAU,aAAf,uBACA,oCAAQwK,WAAS,EAACxK,UAAU,aAAamE,KAAK,QAAW6H,SAG7D,cAACvK,EAAD,CAAUzB,UAAU,mBAAmBE,QAASgM,EAAhD,2BAGA,cAACzK,EAAD,CAAUzB,UAAU,mBAAmBE,QAAS2C,EAAhD,2BAMNR,SAAS2F,eAAe,aAMtBD,GAAiB,CACrBE,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,oBACjBC,OAAQ,KEyCK8D,GA/FE,SAAC,GAQX,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,WACAxF,EAKI,EALJA,GACA6B,EAII,EAJJA,SACA4D,EAGI,EAHJA,eACAL,EAEI,EAFJA,WACApH,EACI,EADJA,cACI,EACwBjC,oBAAS,GADjC,mBACG8E,EADH,KACWwB,EADX,OAE4BtG,mBAAS,IAFrC,mBAEGkG,EAFH,KAEaC,EAFb,OAG4BnG,mBAAS,SAHrC,mBAGG2J,EAHH,KAGaC,EAHb,KA+CJ,OA1CA1N,qBAAU,WACR,GAAI+H,EAAI,CAEN,IAAM4F,EAAc9O,EACjBoB,WAAW,SACXK,IAAIyH,GACJ9H,WAAW,YACXwK,QAAQ,YAAa,QACrBvK,YAAW,SAAAC,GACV8J,EAAY9J,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIE,cAE7C,OAAO,kBAAMmN,QAEd,CAAC5F,IAEJ/H,qBAAU,WACJgK,EAASzC,OAAS,GAGtB,WAAwB,IAAD,EAKfwD,EAAY,IAAI9F,KAAJ,UAAS+E,EAAS,GAAGe,iBAArB,aAAS,EAAuBO,UAC5CM,EAAOb,EAAUc,cAEjBC,EACJf,EAAUgB,YAAc,GACpBhB,EAAUgB,WADd,WAEQhB,EAAUgB,WAAa,GAE3BC,EACJjB,EAAUkB,WAAa,GACnBlB,EAAUkB,UADd,WAEQlB,EAAUkB,WAEpByB,EAAY1B,EAAM,IAAMF,EAAQ,IAAMF,GApBtCgC,KAsBD,CAAC5D,IAIF,mCACGuD,EACC,qCACE,sBAAKvM,UAAU,WAAWE,QAAS,kBAAMkJ,GAAU,IAAnD,UACE,cAAC,KAAD,IACA,gDAEF,cAAC,GAAD,CAAcxB,OAAQA,EAAQ/E,aAAc,kBAAMuG,GAAU,SAG9D,mCACE,cAAC,IAAD,CAAMyD,GAAE,UAAKP,EAAL,YAAavF,GAAMF,MAAO,CAAEiG,eAAgB,QAApD,SACE,sBACE9M,UAAS,mBAAcmM,GAAU,gBACjCjM,QAAS,kBAAMsM,EAAezF,IAFhC,UAIE,qBAAK/G,UAAU,mBAAf,SACE,cAACqK,EAAA,EAAD,CAAQhD,IAAKtC,GAAiBA,MAEhC,sBAAK/E,UAAU,qBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,WAAb,SAAyB4I,IACzB,mBAAG5I,UAAU,OAAb,SAAqByM,OAEvB,qBAAKzM,UAAU,gBAAf,SACE,mBAAGA,UAAU,cAAb,SACIgJ,EAASzC,OAAcyC,EAAS,GAAG5H,QAAjB,oBCgEzB2L,GA7IC,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACT3L,EAAShC,qBAAWT,GAApByC,KADoB,EASxBhC,qBAAWP,GANb4O,EAH0B,EAG1BA,MACAC,EAJ0B,EAI1BA,SACAC,EAL0B,EAK1BA,iBACAC,EAN0B,EAM1BA,eACApO,EAP0B,EAO1BA,oBACAqO,EAR0B,EAQ1BA,uBAGIC,EAAY/J,iBAAO,IAEzBtE,qBAAU,WAER,IAAM2N,EAAc9O,EACjBoB,WAAW,SACXwK,QAAQ,YAAa,QACrBvK,YAAW,SAAAC,GACV8N,EACE9N,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CACxByH,GAAIzH,EAAIyH,GACRvH,KAAMF,EAAIE,YAId6N,GAAaF,EAAeE,EAAU3H,QAAQ0E,UAGlD,OAAO,kBAAMuC,OAEZ,IAGH,IAAMH,EAAiB,SAAAc,GACrBL,EACED,EAAM3N,KAAI,SAAAiK,GAkBR,OAjBIgE,IAAkBhE,EAAKvC,IACzBuC,EAAK9J,KAAK2M,YAAa,EACvBtO,EAAGoB,WAAW,SAASK,IAAIgK,EAAKvC,IAAIjG,IAClC,CACEqL,YAAY,GAEd,CAAEnH,OAAO,MAGXsE,EAAK9J,KAAK2M,YAAa,EACvBtO,EAAGoB,WAAW,SAASK,IAAIgK,EAAKvC,IAAIjG,IAClC,CACEqL,YAAY,GAEd,CAAEnH,OAAO,KAGNsE,OAObtK,qBAAU,WACiB,OAArBkO,IACFG,EAAU3H,QAAQ0E,MAAQ,MAE3B,CAAC8C,EAAkBG,IAWtB,OACE,mCACE,sBAAKrN,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAACqK,EAAA,EAAD,CAAQhD,IAAK1G,GAAQA,EAAKf,WAC1B,sBAAKI,UAAU,uBAAf,UACE,cAACkH,EAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,KAAD,YAKN,qBAAKlH,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,IAAD,IACA,uBACEmE,KAAK,OACLsH,YAAY,2BACZnH,IAAK+I,EACLrG,SAlCK,SAAAZ,GACiB,KAA5BiH,EAAU3H,QAAQ0E,OACpBgD,EAAuBC,GACvBF,EAAe/G,EAAEC,OAAO+D,QAExBrL,YAkCE,sBAAKiB,UAAU,iBAAf,UACE,cAAC,GAAD,CAAUuM,YAAU,IAEnBS,IACEE,GACDF,EAAM3N,KAAI,SAAAiK,GAAI,OACZ,cAAC,GAAD,CACEgD,KAAMA,EAENvF,GAAIuC,EAAKvC,GACT6B,SAAUU,EAAK9J,KAAKgF,KACpB2H,WAAY7C,EAAK9J,KAAK2M,WACtBK,eAAgBA,EAChBzH,cAAeuE,EAAK9J,KAAKuF,eALpBuE,EAAKvC,OAQfiG,GACCE,GACAA,EAAiB7N,KAAI,SAAAiK,GAAI,OACvB,cAAC,GAAD,CACEgD,KAAMA,EAENvF,GAAIuC,EAAKvC,GACT6B,SAAUU,EAAK9J,KAAKgF,KACpB2H,WAAY7C,EAAK9J,KAAK2M,WACtBK,eAAgBA,EAChBzH,cAAeuE,EAAK9J,KAAKuF,eALpBuE,EAAKvC,gBChJX,I,OAAA,IAA0B,wCCoC1BwG,GA9BE,WACf,OACE,mCACE,sBAAKvN,UAAU,WAAf,UACE,cAACqK,EAAA,EAAD,CAAQrK,UAAU,SAASqH,IAAKmG,KAChC,mBAAGxN,UAAU,QAAb,qCACA,mBAAGA,UAAU,OAAb,+GAKA,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,kBACb,uBAAMA,UAAU,iBAAhB,6CAEE,mBACEyN,KAAK,oCACLpH,OAAO,SACPqH,IAAI,aACJ1N,UAAU,iBAJZ,sCCQG2N,I,OAvBW,SAAC,GAA8B,IAA5B/F,EAA2B,EAA3BA,OAAQ/E,EAAmB,EAAnBA,aACnC,OAAK+E,EAEEC,IAASC,aACd,mCACE,qBAAKjB,MAAOkB,GAAZ,SACE,qBAAK/H,UAAU,oBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,cAAb,qEAGA,mBAAGA,UAAU,iBAAb,wJAGA,cAACyB,EAAD,CAAUvB,QAAS2C,EAAnB,qCAKRR,SAAS2F,eAAe,uBAlBN,OAwBhBD,GAAiB,CACrBE,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,oBACjBC,OAAQ,KCnCJqF,GAAe,GACfC,GAAoB1P,wBAAcyP,IAGlCE,GAAqB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAChBlL,mBAAS,IADO,mBAC7CmL,EAD6C,KACjCC,EADiC,KAuCpD,OAnCAlP,qBAAU,WACR,IAAMmP,EAAkB,GAClBC,EAAOC,OAAOD,KAAKJ,GAGnBM,EAAsB,WAC1B,IAAMC,EAAgBH,EAAKI,QAAO,SAACC,EAAKC,GAItC,OAHAD,EAAIC,MACFP,EAAgBO,KAAUP,EAAgBO,GAAOC,SAE5CF,IACN,IACHP,EAAcK,IAGhB,GAAIzM,QAAUA,OAAO8M,WAAY,CAC/B,IAAMD,EAAU,GAChBP,EAAKS,SAAQ,SAAAH,GACmB,kBAAnBV,EAAQU,IACjBP,EAAgBO,GAAS5M,OAAO8M,WAAWZ,EAAQU,IACnDC,EAAQD,GAASP,EAAgBO,GAAOC,SAExCA,EAAQD,IAAS,KAGrBR,EAAcS,GAEdP,EAAKS,SAAQ,SAAAH,GACmB,kBAAnBV,EAAQU,IACjBP,EAAgBO,GAAOI,YAAYR,SAIxC,CAACN,IAIF,aADA,CACCH,GAAkBkB,SAAnB,CAA4B3E,MAAO6D,EAAnC,SACGF,KCrCP,IA4CeiB,GA5CK,WAClB,IAKIC,EALE3Q,EAAUC,cACR+N,EAAS4C,cAAT5C,KAEF6C,EDuCR,WACE,IAAMC,EAAUzQ,qBAAWkP,IAC3B,GAAIuB,IAAYxB,GACd,MAAM,IAAIyB,MAAM,wDAElB,OAAOD,EC5CaE,GAGpBjB,OAAOD,KAAKe,GAAa9P,KAAI,SAAAqP,GAI3B,MAHc,OAAVA,IAAyC,IAAvBS,EAAYT,KAChCO,GAAO,GAEF,QAXe,MAaInM,oBAAS,GAbb,mBAajB8E,EAbiB,KAaTwB,EAbS,KAgBlB5K,EAAMC,aAAaC,QAAQ,SAMjC,OAJAM,qBAAU,YACPR,GAAOF,EAAQyB,KAAK,OACpB,CAACvB,EAAKF,IAGP,mCACE,qBAAK0B,UAAU,UAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,GAAD,CAASsM,KAAMA,IACf,sBAAKtM,UAAU,OAAf,UACE,cAAC,IAAD,CAAOuP,OAAK,EAACjD,KAAK,OAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOiD,OAAK,EAACjD,KAAI,UAAKA,EAAL,YAAjB,SACE,cAAC,GAAD,MAED2C,GACC,cAACO,GAAD,CAAoB5H,OAAQA,EAAQ/E,aArB3B,kBAAMuG,GAAU,iBCJxBqG,I,cAhBE,WACf,IAAMnR,EAAUC,cAEhB,OACE,mCACE,sBAAKyB,UAAU,sBAAf,UACE,mBAAGA,UAAU,QAAb,uBACA,mBAAGA,UAAU,SAAb,4BACA,cAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAAS,kBAAM5B,EAAQyB,KAAK,MAA3D,yCCGO2P,GAZM,WACnB,OACE,mCACE,qBAAK1P,UAAU,WAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,WC4CK2P,I,cA1CE,WACf,IAAMrR,EAAUC,cADK,EAGsBI,qBAAWT,GAA9CyC,EAHa,EAGbA,KAAM9B,EAHO,EAGPA,cAAeC,EAHR,EAGQA,UAE7BE,qBAAU,WACRnB,EAAGoB,WAAW,SAASC,YAAW,SAAAC,GAChCA,EAASC,KAAKC,KAAI,SAAAC,GAKhB,OAHYb,aAAaC,QAAQ,WAEzBY,EAAIE,OAAOC,aAAeZ,EAAcS,EAAIE,QAC7CF,UAGV,CAACT,IAQJ,OACE,mCACE,sBAAKmB,UAAU,sBAAf,UACE,cAACqK,EAAA,EAAD,CAAQrK,UAAU,SAASqH,IAAK1G,GAAQA,EAAKf,WAC7C,mBAAGI,UAAU,OAAb,SAAqBW,GAAQA,EAAKjB,cAClC,mBAAGM,UAAU,QAAb,SAAsBW,GAAQA,EAAKhB,QACnC,sBAAKK,UAAU,UAAf,UACE,cAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAAS,kBAAM5B,EAAQyB,KAAK,SAA3D,sBAGA,cAACE,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAhBvB,WACdzB,aAAaqB,WAAW,SACxBhB,IACAR,EAAQyB,KAAK,MAaP,gCC5BK6P,GAZM,WACnB,OACE,mCACE,qBAAK5P,UAAU,WAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,WCVG6P,GAAkB,kBAClBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAa,aAEbC,GAAY,YAEZC,GAAkB,kBAClBC,GAAwB,wBAExBC,GAA2B,2BC8BzBC,GAjCK,SAACC,EAAOC,GAC1B,OAAQA,EAAOpM,MACb,KAAK2L,GACH,OAAO,6BACFQ,GADL,IAEE1R,SAAS,IAEb,KAAKmR,GACH,OAAO,6BACFO,GADL,IAEE7Q,YAAa8Q,EAAOC,UAExB,KAAKX,GACH,OAAO,6BACFS,GADL,IAEE3P,KAAM,CACJlB,YAAa8Q,EAAOC,QAAQ/Q,YAC5BC,YAAa6Q,EAAOC,QAAQ9Q,YAC5BC,MAAO4Q,EAAOC,QAAQ7Q,MACtBC,SAAU2Q,EAAOC,QAAQ5Q,YAG/B,KAAKoQ,GACH,OAAO,6BACFM,GADL,IAEE3P,KAAM,KACN/B,SAAS,EACTa,YAAa,OAEjB,QACE,MAAM4P,MAAM,oCAAD,OAAqCkB,EAAOpM,SCuB9CsM,GAlDG,SAAA9O,GAChB,IADyB,EAWC+O,qBAAWC,GAVhB,CACnBhQ,KAAM,CACJlB,YAAa,KACbC,YAAa,KACbC,MAAO,KACPC,SAAU,MAEZhB,SAAS,EACTa,YAAa,OATU,mBAWlB6Q,EAXkB,KAWXM,EAXW,KAmCzB,OACE,cAAC,EAAY7B,SAAb,CACE3E,MAAO,CACLxL,QAAS0R,EAAM1R,QACfa,YAAa6Q,EAAM7Q,YACnBkB,KAAM2P,EAAM3P,KACZ9B,cA5BgB,SAAA8B,GACpBiQ,EAAS,CACPzM,KAAM0L,GACNW,QAAS7P,IAEXiQ,EAAS,CACPzM,KAAM2L,MAuBJzP,eAnBiB,SAAAZ,GACrBmR,EAAS,CACPzM,KAAM4L,GACNS,QAAS/Q,KAiBPX,UAbY,WAChB8R,EAAS,CAAEzM,KAAM6L,OAKjB,SAUGrO,EAAMoM,YCjBE8C,GAhCK,SAACP,EAAOC,GAC1B,OAAQA,EAAOpM,MACb,KAAK8L,GACH,OAAO,6BACFK,GADL,IAEEtD,MAAOuD,EAAOC,UAElB,KAAKN,GACH,OAAO,6BACFI,GADL,IAEEpD,iBACEoD,EAAMtD,OACNsD,EAAMtD,MAAM8D,QAAO,SAAAxH,GACjB,IAAMyH,EAAcR,EAAOC,QAAQQ,QAAQ,kBAAmB,IACxDC,EAAQ,IAAIC,OAAJ,UAAcH,GAAe,MAC3C,OAAOzH,EAAK9J,KAAKgF,KAAK2M,MAAMF,QAGpC,KAAKd,GACH,OAAO,6BACFG,GADL,IAEEpD,iBAAkB,OAEtB,KAAKkD,GACH,oCACKE,GADL,IAEEjD,UAAWkD,EAAOC,UAEtB,QACE,MAAMnB,MAAM,oCAAD,OAAqCkB,EAAOpM,SCyB9CiN,GAnDG,SAAAzP,GAChB,IADyB,EAMC+O,qBAAWW,GALhB,CACnBrE,MAAO,KACPE,iBAAkB,KAClBG,UAAW,OAJY,mBAMlBiD,EANkB,KAMXM,EANW,KAmCzB,OACE,cAAC,EAAY7B,SAAb,CACE3E,MAAO,CACL4C,MAAOsD,EAAMtD,MACbE,iBAAkBoD,EAAMpD,iBACxBG,UAAWiD,EAAMjD,UACjBD,uBAbyB,SAAAC,GAC7BuD,EAAS,CACPzM,KAAMiM,GACNI,QAASnD,KAWPJ,SAlCW,SAAAD,GACf4D,EAAS,CACPzM,KAAM8L,GACNO,QAASxD,KAgCPG,eA5BiB,SAAAmE,GACrBV,EAAS,CACPzM,KAAM+L,GACNM,QAASc,KA0BPvS,oBAtBsB,WAC1B6R,EAAS,CACPzM,KAAMgM,OAYR,SAWGxO,EAAMoM,YCbEwD,GA/BH,WACV,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,qBAAKvR,UAAU,MAAf,SACE,eAAC,IAAD,WACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,QAIJ,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuP,OAAK,EAACjD,KAAK,IAAIlF,UAAW/F,IACjC,cAAC,IAAD,CAAOiL,KAAK,YAAYlF,UAAWwI,KACnC,cAAC,IAAD,CAAOtD,KAAK,OAAOlF,UAAW4H,KAC9B,cAAC,IAAD,CAAO5H,UAAWsI,wBCpBvB8B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjR,MAAK,YAAkD,IAA/CkR,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCMd5J,IAASmK,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,CAAoBjE,QAPR,CACdkE,GAAI,qBACJC,GAAI,2BAKF,SACE,cAAC,GAAD,QAGJ9P,SAAS2F,eAAe,SAM1BwJ,M","file":"static/js/main.d83ad762.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n/**\r\n * @CAUTIOUS\r\n * <any> changes including comments may raise issue below:\r\n * //* Firebase: Firebase App named '[DEFAULT]' already exists (app/duplicate-app)\r\n * Need to manual-refresh the page - to actual reload the Firebase Initialization\r\n */\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBhQVSm-7H66z-t7-cgO93TBqE8gteWI6A\",\r\n  authDomain: \"woocel-v0.firebaseapp.com\",\r\n  databaseURL: \"https://woocel-v0.firebaseio.com\",\r\n  projectId: \"woocel-v0\",\r\n  storageBucket: \"woocel-v0.appspot.com\",\r\n  messagingSenderId: \"970868840347\",\r\n  appId: \"1:970868840347:web:ef2f900a5ac58e95e2333e\",\r\n  measurementId: \"G-TB0QVBYPCX\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n//\r\nexport { auth, provider, firebaseApp };\r\nexport default db;\r\n","import { createContext } from 'react'\r\n\r\nconst authContext = createContext()\r\nexport default authContext","import { createContext } from 'react'\r\n\r\nconst roomContext = createContext()\r\nexport default roomContext","// react hooks + react-router-dom + css\r\nimport { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n// @material-ui\r\nimport Button from \"@material-ui/core/Button\";\r\n// firebase\r\nimport db from \"../config/firebase\";\r\n// react contexts\r\nimport authContext from \"../context/auth/authContext\";\r\nimport roomContext from \"../context/room/roomContext\";\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory();\r\n  const LST = localStorage.getItem(\"token\");\r\n  const { isLogin, writeUserInfo, resetAuth } = useContext(authContext);\r\n  const { clearChatroomFilter } = useContext(roomContext);\r\n\r\n  useEffect(() => {\r\n    // read auth-userInfo from db => consistent login access\r\n    // assume LST is not altered, either intentionally or accidentally\r\n    if (LST) {\r\n      db.collection(\"users\").onSnapshot(snapshot => {\r\n        snapshot.docs.map(doc => {\r\n          // matched accessToken >> write into react-contexts\r\n          let docData = doc.data();\r\n          if (LST === docData.accessToken) {\r\n            writeUserInfo({\r\n              accessToken: docData.accessToken,\r\n              displayName: docData.displayName,\r\n              email: docData.email,\r\n              photoURL: docData.photoURL,\r\n            });\r\n          } \r\n          return doc;\r\n        });\r\n      });\r\n    } else {\r\n      signOut();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [LST]);\r\n\r\n  const signOut = () => {\r\n    clearChatroomFilter();\r\n    localStorage.removeItem(\"token\");\r\n    resetAuth();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"nav__leftContainer\">\r\n        <i className=\"fab fa-whatsapp logo\"></i>\r\n        <p className=\"title\">Woocel</p>\r\n      </div>\r\n      <div className=\"nav__rightContainer\">\r\n        <div className=\"icons\">\r\n          <i className={`icon fas fa-bell-slash ${!isLogin && `active`}`}></i>\r\n          <i className={`icon fas fa-wifi ${isLogin && `active`}`}></i>\r\n        </div>\r\n        <p className=\"text\">{!isLogin ? \"no-token\" : \"has-token\"}</p>\r\n        <Button\r\n          className=\"google-btn\"\r\n          onClick={signOut}\r\n          disabled={!isLogin && true}\r\n        >\r\n          Sign Out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","// react hooks + css\r\nimport { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n// @material ui\r\nimport Button from \"@material-ui/core/Button\";\r\n// firebase\r\nimport { auth, provider } from \"../../config/firebase\";\r\nimport db from \"../../config/firebase\";\r\n// react context\r\nimport authContext from \"../../context/auth/authContext\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const LST = localStorage.getItem(\"token\");\r\n\r\n  const { writeUserInfo, setAccessToken } = useContext(authContext);\r\n\r\n  useEffect(() => {\r\n    LST && history.push(\"/continue\");\r\n  }, [history, LST]);\r\n\r\n  const signIn = async () => {\r\n    // write auth relevant data into LST & db\r\n    await auth\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        writeUserInfo(result.user);\r\n        setAccessToken(result.credential.accessToken);\r\n        localStorage.setItem(\"token\", result.credential.accessToken);\r\n        // write auth-user info into db\r\n        // ################################################### //\r\n        db.collection(\"users\")\r\n          .doc(result.user.email)\r\n          .set({\r\n            accessToken: result.credential.accessToken,\r\n            displayName: result.user.displayName,\r\n            email: result.user.email,\r\n            photoURL: result.user.photoURL,\r\n          })\r\n          .then( () => {\r\n            console.log(\"Auth User info successfully written!\");\r\n          })\r\n          .catch( error =>  {\r\n            console.error(\"Error writing auth-user-info: \", error);\r\n          });\r\n        // ################################################### //\r\n      })\r\n      .catch(error => alert(error.message));\r\n    history.push(\"/app\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login__container\">\r\n        <i className=\"fab fa-whatsapp\"></i>\r\n        <p>Sign in to Woocel</p>\r\n        <Button className=\"google-btn\" onClick={signIn}>\r\n          Sign in with Google\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// css\r\nimport \"./LoginPage.css\";\r\n// components\r\nimport Login from \"../../coms/Login/Login\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <>\r\n      <div className=\"login\">\r\n        <div className=\"login__wrapper\">\r\n          <Login />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from \"styled-components\";\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// avoid transition\r\nexport const NoTransitionDiv = styled.div`\r\n  transition: none !important;\r\n`;\r\n// a btn style\r\nexport const ReButton = styled(Button)`\r\n  color: lightblue;\r\n  display: block;\r\n  width: 100%;\r\n  transition: all 0.4s ease;\r\n  outline: none;\r\n  :hover {\r\n    color: black;\r\n    background-color: lavender;\r\n    transition: all 0.4s ease;\r\n  }\r\n`;\r\n// not displaying crops if none \r\nexport const NoneCropDiv = styled.div`\r\n  ${props => !props.completedCrop && `display: none`};\r\n`;","// react hooks + css\r\nimport { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport \"./Corsona.css\";\r\n// ReactCrop\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n// @material-ui\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n// styled-components\r\nimport {\r\n  NoTransitionDiv,\r\n  NoneCropDiv,\r\n  ReButton,\r\n} from \"../../StyledComponents/StyledComponents\";\r\n// firebase\r\nimport db, { firebaseApp } from \"../../config/firebase\";\r\n\r\n// Increase pixel density for crop preview quality on retina screens.\r\nconst pixelRatio = window.devicePixelRatio || 1;\r\n\r\nfunction getResizedCanvas(canvas, newWidth, newHeight) {\r\n  const tmpCanvas = document.createElement(\"canvas\");\r\n  tmpCanvas.width = newWidth;\r\n  tmpCanvas.height = newHeight;\r\n\r\n  const ctx = tmpCanvas.getContext(\"2d\");\r\n  ctx.drawImage(\r\n    canvas,\r\n    0,\r\n    0,\r\n    canvas.width,\r\n    canvas.height,\r\n    0,\r\n    0,\r\n    newWidth,\r\n    newHeight\r\n  );\r\n\r\n  return tmpCanvas;\r\n}\r\n\r\nfunction blobToFile(theBlob, fileName) {\r\n  return new File([theBlob], fileName, {\r\n    lastModified: new Date().getTime(),\r\n    type: theBlob.type,\r\n  });\r\n}\r\n\r\nconst Corsona = ({ roomId, onCloseModal }) => {\r\n  const [readyFile, setReadyFile] = useState(null);\r\n  const [triggered, setTriggered] = useState(false);\r\n  const [upImg, setUpImg] = useState();\r\n  const imgRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n\r\n  const generateDownload = async (previewCanvas, crop) => {\r\n    if (!crop || !previewCanvas) {\r\n      return;\r\n    }\r\n\r\n    const canvas = getResizedCanvas(previewCanvas, crop.width, crop.height);\r\n\r\n    canvas.toBlob(blob => {\r\n      console.log(blob);\r\n      setReadyFile(blobToFile(blob, \"uploaded-avatar-img.png\"));\r\n      // const previewUrl = window.URL.createObjectURL(blob);\r\n      // console.log(\"previewURL >> \", blob)\r\n      // const anchor = document.createElement(\"a\");\r\n      // anchor.download = \"cropPreview.png\";\r\n      // anchor.href = URL.createObjectURL(blob);\r\n      // console.log('anchor href >> ', anchor.href)\r\n      // anchor.click();\r\n\r\n      // window.URL.revokeObjectURL(previewUrl);\r\n    }, \"image/png\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!readyFile || !triggered) {\r\n      return;\r\n    }\r\n    async function fetchFile() {\r\n      // Create a root reference\r\n      const storageRef = firebaseApp.storage().ref();\r\n      // create dir reference for the uploaded file\r\n      let fileStoragePath = `${roomId}/${readyFile.name}`;\r\n      const fileRef = storageRef.child(fileStoragePath);\r\n\r\n      //! upload file\r\n      await fileRef\r\n        .put(readyFile)\r\n        .then(() => {\r\n          console.log(readyFile);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"failed to upload file, error >> \", err);\r\n        });\r\n\r\n      //! download url for the uploaded file\r\n      await fileRef\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          db.collection(\"rooms\").doc(roomId).set(\r\n            {\r\n              roomAvatarUrl: url,\r\n              fileStoragePath,\r\n            },\r\n            { merge: true }\r\n          );\r\n        })\r\n        .catch(err =>\r\n          console.log(\r\n            \"failed to get downloadURL for uploaded file, error >> \",\r\n            err\r\n          )\r\n        );\r\n      onCloseModal();\r\n    }\r\n\r\n    fetchFile();\r\n  }, [readyFile, roomId, triggered, onCloseModal]);\r\n\r\n  //* initial crop properties\r\n  const [crop, setCrop] = useState({\r\n    unit: \"%\",\r\n    width: 50,\r\n    aspect: 1 / 1,\r\n    x: 25,\r\n    y: 25,\r\n  });\r\n\r\n  const onLoad = useCallback(img => {\r\n    imgRef.current = img;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n\r\n    const image = imgRef.current;\r\n    const canvas = previewCanvasRef.current;\r\n    const crop = completedCrop;\r\n\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = \"high\";\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n  }, [completedCrop]);\r\n\r\n  const uploadFile = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        setUpImg(reader.result);\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"corsona\">\r\n        <div className=\"upload__btn\">\r\n          <input\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={uploadFile}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              aria-label=\"upload picture\"\r\n              component=\"div\" // if remove, it wont fire event, REASON unknown\r\n              onClick={uploadFile}\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"upload__crop\">\r\n          <NoTransitionDiv>\r\n            <ReactCrop\r\n              className={`reactCrop ${!upImg && `hidden`}`}\r\n              src={upImg}\r\n              onImageLoaded={onLoad}\r\n              crop={crop}\r\n              onChange={c => setCrop(c)}\r\n              onComplete={c => setCompletedCrop(c)}\r\n            />\r\n          </NoTransitionDiv>\r\n        </div>\r\n\r\n        <div className=\"upload__preview\">\r\n          <div>\r\n            <canvas\r\n              className={`${!upImg && `hidden`}`}\r\n              ref={previewCanvasRef}\r\n              // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n              style={{\r\n                width: Math.round(completedCrop?.width ?? 0),\r\n                height: Math.round(completedCrop?.height ?? 0),\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"upload__download\">\r\n          <NoneCropDiv completedCrop={completedCrop}>\r\n            <ReButton\r\n              disabled={!completedCrop?.width || !completedCrop?.height}\r\n              onClick={() => {\r\n                generateDownload(previewCanvasRef.current, completedCrop);\r\n                setTriggered(true);\r\n              }}\r\n            >\r\n              Select this cropped image\r\n            </ReButton>\r\n          </NoneCropDiv>\r\n        </div>\r\n\r\n        <ReButton className=\"modalCloseButton\" onClick={onCloseModal}>\r\n          Cancel\r\n        </ReButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Corsona;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Corsona from \"../Corsona/Corsona\";\r\nimport \"./AddRoomAvatarModal.css\";\r\n\r\nconst AddRoomAvatarModal = ({ roomId, isOpen, onCloseModal }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div style={OVERLAY_STYLES}>\r\n        <div className=\"addRoomModal\">\r\n          <Corsona roomId={roomId} onCloseModal={onCloseModal} />\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"AddRoomAvatarPortal\")\r\n  );\r\n};\r\n\r\nexport default AddRoomAvatarModal;\r\n\r\nconst OVERLAY_STYLES = {\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"rgba(0, 0, 0, .7)\",\r\n  zIndex: 1000,\r\n};\r\n","// react hooks + react-router-dom + css\r\nimport { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\n// @material-ui\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n// components\r\nimport AddRoomAvatarModal from \"../AddRoomAvatarModal/AddRoomAvatarModal\";\r\n// firebase\r\nimport db from \"../../config/firebase\";\r\nimport firebase from \"firebase\";\r\nimport { firebaseApp } from \"../../config/firebase\";\r\n// react contexts\r\nimport authContext from \"../../context/auth/authContext\";\r\n\r\nconst Chat = () => {\r\n  let history = useHistory();\r\n  const { roomId } = useParams();\r\n  const messageRef = useRef();\r\n  const inputRef = useRef();\r\n\r\n  const { user } = useContext(authContext);\r\n\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [roomAvatar, setRoomAvatar] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onOpenModal = () => setIsOpen(true);\r\n  const onCloseModal = () => setIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      // set chatroom avatar\r\n      const unsubscribeOne = db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot(snapshot => {\r\n          let room = snapshot.data();\r\n          room && setRoomAvatar(room.roomAvatarUrl);\r\n        });\r\n      // set roomName\r\n      const unsubsribeTwo = db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot(snapshot => {\r\n          try {\r\n            setRoomName(snapshot.data().name);\r\n          } catch (error) {\r\n            history.push(\"/app\");\r\n          }\r\n        });\r\n      // display messages from specified chatroom\r\n      const unsubscribeThree = db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot(snapshot => {\r\n          setMessages(snapshot.docs.map(doc => doc.data()));\r\n        });\r\n      return () => {\r\n        unsubscribeOne();\r\n        unsubsribeTwo();\r\n        unsubscribeThree();\r\n      };\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [roomId]);\r\n\r\n  // scrollbar-position\r\n  useEffect(() => {\r\n    if (messageRef.current) {\r\n      messageRef.current.scrollIntoView({\r\n        behavior: \"auto\",\r\n        block: \"start\",\r\n        inline: \"nearest\",\r\n      });\r\n    }\r\n  });\r\n\r\n  // https://codesandbox.io/s/chat-application-3t380\r\n  const sendMessage = e => {\r\n    e.preventDefault();\r\n    setInput(inputRef.current.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input) {\r\n      //* @latter-imp-feature\r\n      // if (messages.length > 0) {\r\n      //   let prevTimestamp = messages[messages.length - 1].timestamp?.toDate();\r\n      // }\r\n      // add msg\r\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        formattedTimestamp: null,\r\n        isNewerDate: false,\r\n      });\r\n\r\n      inputRef.current.value = \"\";\r\n      setInput(\"\"); // reset input value\r\n    }\r\n  }, [input, roomId, user.displayName]);\r\n\r\n  const fnFormatTimestamp = timestamp => {\r\n    const year = timestamp.getFullYear();\r\n    const month = timestamp.getMonth() + 1;\r\n    const day = timestamp.getDate();\r\n    const hour =\r\n      timestamp.getHours() >= 10\r\n        ? timestamp.getHours()\r\n        : `0${timestamp.getHours()}`;\r\n    const minute =\r\n      timestamp.getMinutes() >= 10\r\n        ? timestamp.getMinutes()\r\n        : `0${timestamp.getMinutes()}`;\r\n    const second = timestamp.getSeconds();\r\n\r\n    let formattedTimestamp;\r\n    // checkIf NaN, raise a warning though\r\n    // eslint-disable-next-line\r\n    if (year !== year) {\r\n      formattedTimestamp = \"-/-/-\";\r\n    } else {\r\n      formattedTimestamp = `${hour}:${minute}:${second} ${day}/${month}/${year}`;\r\n    }\r\n    return formattedTimestamp;\r\n  };\r\n\r\n  const onDeleteRoom = () => {\r\n    if (roomId) {\r\n      // extract fileStoragePath from db\r\n      // then delete avatar-file from storage\r\n      // before deleting the one chatroom\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot(snapshot => {\r\n          try {\r\n            let deleteFolderPath = snapshot.data().fileStoragePath;\r\n            // Create a root reference\r\n            const storageRef = firebaseApp.storage().ref();\r\n            const fileRef = storageRef.child(deleteFolderPath);\r\n            fileRef.delete();\r\n          } catch (error) {\r\n            // might log error into db-collection(\"errors\")?\r\n          }\r\n        });\r\n      // delete the one chatroom\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .delete()\r\n        .then(function () {\r\n          console.log(\"Document successfully deleted!\");\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat__header\">\r\n        <div className=\"chat__headerLeft\">\r\n          <Avatar src={roomAvatar && roomAvatar} />\r\n          <AddRoomAvatarModal\r\n            roomId={roomId}\r\n            isOpen={isOpen}\r\n            onCloseModal={onCloseModal}\r\n          />\r\n          <div className=\"info\">\r\n            <>\r\n              <p>{roomName} </p>\r\n              <p className=\"lastSeen\">\r\n                Last Seen :{\" \"}\r\n                {!messages[messages.length - 1]?.timestamp\r\n                  ? \" - / - / -\"\r\n                  : new Date(\r\n                      messages[messages.length - 1]?.timestamp?.toDate()\r\n                    ).toString()}\r\n              </p>\r\n            </>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton autoFocus onClick={onOpenModal}>\r\n            <AddPhotoAlternateIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onDeleteRoom}>\r\n            <DeleteOutlineIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/*//! CHAT BODY  */}\r\n      <div className=\"chat__body\">\r\n        {messages.map((message, i) => {\r\n          let timestamp = new Date(message.timestamp?.toDate());\r\n          const formattedTimestamp = fnFormatTimestamp(timestamp);\r\n\r\n          return (\r\n            <div key={i} ref={messageRef}>\r\n              {/* shud use sort of user id instead of name, in case exactly same username */}\r\n              <div\r\n                className={`chat__message ${\r\n                  message.name === user.displayName && `chat__receiver`\r\n                }`}\r\n              >\r\n                <p className=\"chat__name\">{message.name}</p>\r\n                <p className=\"chat__text\">{message.message}</p>\r\n\r\n                <span className=\"chat__timestamp\">\r\n                  {/* {new Date(message.timestamp?.toDate()).toString()} */}\r\n                  {formattedTimestamp}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/*//! CHAT FOOTER  */}\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            ref={inputRef}\r\n            // onChange={e => setInput(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Enter a message\"\r\n          />\r\n          <button onClick={sendMessage}>Send a message</button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","// react hooks + css\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./AddRoomModal.css\";\r\n// custom hooks\r\nimport { useInput } from \"./useInput\";\r\n// styled-components\r\nimport { ReButton } from '../../StyledComponents/StyledComponents'\r\n// firebase\r\nimport db from \"../../config/firebase\";\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst AddRoomModal = ({ isOpen, onCloseModal }) => {\r\n  const { roomname, bind, reset } = useInput(\"\");\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // write new room name into db\r\n    if (roomname) {\r\n      db.collection(\"rooms\")\r\n        .add({\r\n          name: roomname,\r\n          isSelected: false,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          roomAvatarUrl: null,\r\n          fileStoragePath: null,\r\n        })\r\n    }\r\n    reset();\r\n    onCloseModal();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div style={OVERLAY_STYLES}>\r\n        <div className=\"addRoomModal\">\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              <div className=\"modalTitle\">Room Name</div>\r\n              <input  autoFocus className=\"modalInput\" type=\"text\" {...bind} />\r\n            </label>\r\n          </form>\r\n          <ReButton className='modalEnterButton' onClick={handleSubmit} >\r\n            Add This Room\r\n          </ReButton>\r\n          <ReButton className=\"modalCloseButton\" onClick={onCloseModal}>\r\n            Cancel\r\n          </ReButton>\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};\r\n\r\nexport default AddRoomModal;\r\n\r\nconst OVERLAY_STYLES = {\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"rgba(0, 0, 0, .7)\",\r\n  zIndex: 1000,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [roomname, setRoomname] = useState(initialValue);\r\n\r\n  return {\r\n    roomname,\r\n    setRoomname,\r\n    reset: () => setRoomname(\"\"),\r\n    bind: {\r\n      roomname,\r\n      onChange: e => {\r\n        setRoomname(e.target.value);\r\n      },\r\n    },\r\n  };\r\n};\r\n","// react hooks + react-router-dom + css\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./EachRoom.css\";\r\n// @material-ui\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n// components\r\nimport AddRoomModal from \"../AddRoomModal/AddRoomModal\";\r\n// firebase\r\nimport db from \"../../config/firebase\";\r\n\r\nconst EachRoom = ({\r\n  path,\r\n  addNewChat,\r\n  id,\r\n  roomName,\r\n  toggleSelected,\r\n  isSelected,\r\n  roomAvatarUrl,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [lastDate, setLastDate] = useState(\"-/-/-\");\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      // get messages from db specified room \r\n      const unsubscribe = db\r\n        .collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot(snapshot => {\r\n          setMessages(snapshot.docs.map(doc => doc.data()));\r\n        });\r\n      return () => unsubscribe();\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      getLastDate();\r\n    }\r\n    function getLastDate() {\r\n      // const javaScriptRelease = Date.parse(\"04 Jan 1995 00:12:00 GMT\");\r\n      // var dateNum = javaScriptRelease * 1;\r\n      // const dateObj = new Date(dateNum)\r\n\r\n      const timestamp = new Date(messages[0].timestamp?.toDate());\r\n      const year = timestamp.getFullYear();\r\n\r\n      const month =\r\n        timestamp.getMonth() >= 10\r\n          ? timestamp.getMonth()\r\n          : `0${timestamp.getMonth() + 1}`;\r\n\r\n      const day =\r\n        timestamp.getDate() >= 10\r\n          ? timestamp.getDate()\r\n          : `0${timestamp.getDate()}`;\r\n\r\n      setLastDate(day + \"/\" + month + \"/\" + year);\r\n    }\r\n  }, [messages]);\r\n  //todo raise NaN issue\r\n\r\n  return (\r\n    <>\r\n      {addNewChat ? (\r\n        <>\r\n          <div className=\"eachRoom\" onClick={() => setIsOpen(true)}>\r\n            <AddIcon />\r\n            <p>Add new chat</p>\r\n          </div>\r\n          <AddRoomModal isOpen={isOpen} onCloseModal={() => setIsOpen(false)} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Link to={`${path}/${id}`} style={{ textDecoration: \"none\" }}>\r\n            <div\r\n              className={`eachRoom ${isSelected && `selectedRoom`}`}\r\n              onClick={() => toggleSelected(id)}\r\n            >\r\n              <div className=\"eachRoom__avatar\">\r\n                <Avatar src={roomAvatarUrl && roomAvatarUrl} />\r\n              </div>\r\n              <div className=\"eachRoom__textInfo\">\r\n                <div className=\"upperTextInfo\">\r\n                  <p className=\"roomName\">{roomName}</p>\r\n                  <p className=\"date\">{lastDate}</p>\r\n                </div>\r\n                <div className=\"lowerTextInfo\">\r\n                  <p className=\"lastMessage\">\r\n                    {!messages.length ? \"\" : messages[0].message}\r\n                  </p>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EachRoom;\r\n","// react hooks + css\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport \"./Sidebar.css\";\r\n// @material-ui\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\n// components\r\nimport EachRoom from \"../EachRoom/EachRoom\";\r\n// firebase\r\nimport db from \"../../config/firebase\";\r\n// react context\r\nimport authContext from \"../../context/auth/authContext\";\r\nimport roomContext from \"../../context/room/roomContext\";\r\n\r\nconst Sidebar = ({ path }) => {\r\n  const { user } = useContext(authContext);\r\n  const {\r\n    rooms,\r\n    setRooms,\r\n    filteredChatroom,\r\n    filterChatroom,\r\n    clearChatroomFilter,\r\n    writeContext_searchRef,\r\n  } = useContext(roomContext);\r\n\r\n  const searchRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    // get a snap on rooms-collection and upd new snapshot if any change occur\r\n    const unsubscribe = db\r\n      .collection(\"rooms\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot(snapshot => {\r\n        setRooms(\r\n          snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n        // if there is filtered, upd the rooms for new-add || cur-delete || cur-alter\r\n        searchRef && filterChatroom(searchRef.current.value);\r\n      });\r\n\r\n    return () => unsubscribe();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // identify which is currently selected chatroom\r\n  const toggleSelected = onClickRoomId => {\r\n    setRooms(\r\n      rooms.map(room => {\r\n        if (onClickRoomId === room.id) {\r\n          room.data.isSelected = true;\r\n          db.collection(\"rooms\").doc(room.id).set(\r\n            {\r\n              isSelected: true,\r\n            },\r\n            { merge: true }\r\n          );\r\n        } else {\r\n          room.data.isSelected = false;\r\n          db.collection(\"rooms\").doc(room.id).set(\r\n            {\r\n              isSelected: false,\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n        return room;\r\n      })\r\n    );\r\n  };\r\n\r\n  //? in case a page-refresh, trigger searchRef change to \"\"\r\n  // to avoid displaying filtered eachroom\r\n  useEffect(() => {\r\n    if (filteredChatroom === null) {\r\n      searchRef.current.value = \"\";\r\n    }\r\n  }, [filteredChatroom, searchRef]);\r\n\r\n  const onChange = e => {\r\n    if (searchRef.current.value !== \"\") {\r\n      writeContext_searchRef(searchRef);\r\n      filterChatroom(e.target.value);\r\n    } else {\r\n      clearChatroomFilter();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar__header\">\r\n          <Avatar src={user && user.photoURL} />\r\n          <div className=\"sidebar__headerRight\">\r\n            <IconButton>\r\n              <DonutLargeIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <ChatIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sidebar__search\">\r\n          <div className=\"sidebar__searchContainer\">\r\n            <SearchOutlined />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search or start new chat\"\r\n              ref={searchRef}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sidebar__chats\">\r\n          <EachRoom addNewChat />\r\n\r\n          {rooms &&\r\n            !filteredChatroom &&\r\n            rooms.map(room => (\r\n              <EachRoom\r\n                path={path}\r\n                key={room.id}\r\n                id={room.id}\r\n                roomName={room.data.name}\r\n                isSelected={room.data.isSelected}\r\n                toggleSelected={toggleSelected}\r\n                roomAvatarUrl={room.data.roomAvatarUrl}\r\n              />\r\n            ))}\r\n          {rooms &&\r\n            filteredChatroom &&\r\n            filteredChatroom.map(room => (\r\n              <EachRoom\r\n                path={path}\r\n                key={room.id}\r\n                id={room.id}\r\n                roomName={room.data.name}\r\n                isSelected={room.data.isSelected}\r\n                toggleSelected={toggleSelected}\r\n                roomAvatarUrl={room.data.roomAvatarUrl}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/chat-intro.4856994c.jpg\";","// css + img\r\nimport \"./ChatInfo.css\";\r\nimport chatIntroAvatar from \"../../img/chat-intro.jpg\";\r\n// @material-ui\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst ChatInfo = () => {\r\n  return (\r\n    <>\r\n      <div className=\"chatInfo\">\r\n        <Avatar className=\"avatar\" src={chatIntroAvatar} />\r\n        <p className=\"title\">Keep your chat together</p>\r\n        <p className=\"text\">\r\n          Woocel connects to your chat to sync messages. To reduce data usage,\r\n          connect your phone to Wi-Fi.\r\n        </p>\r\n\r\n        <div className=\"downloads\">\r\n          <i className=\"fas fa-laptop\"></i>\r\n          <span className=\"downloads-span\">\r\n            Woocel is available for Windows.\r\n            <a\r\n              href=\"https://www.whatsapp.com/download\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"downloads-link\"\r\n            >\r\n              Get it here.\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatInfo;\r\n","// react-dom + css\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./ToggleMobileModal.css\";\r\n// styled-components\r\nimport { ReButton } from \"../../StyledComponents/StyledComponents\";\r\n\r\nconst ToggleModalPortal = ({ isOpen, onCloseModal }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div style={OVERLAY_STYLES}>\r\n        <div className=\"toggleMobileModal\">\r\n          <div className=\"message__container\">\r\n            <p className=\"top-message\">\r\n              this chat application is only witting for web-platform.\r\n            </p>\r\n            <p className=\"bottom-message\">\r\n              mobile-view would be implemented in the near future using react-native, else you could either use orientation-mode or enable desktop site.\r\n            </p>\r\n            <ReButton onClick={onCloseModal}>Proceed Anyway</ReButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"ToggleMobilePortal\")\r\n  );\r\n};\r\n\r\nexport default ToggleModalPortal;\r\n\r\nconst OVERLAY_STYLES = {\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"rgba(0, 0, 0, .7)\",\r\n  zIndex: 1000,\r\n};\r\n","import { useState, createContext, useContext, useEffect } from \"react\";\r\n\r\n//! context\r\nconst defaultValue = {};\r\nconst BreakpointContext = createContext(defaultValue);\r\n\r\n//! com one\r\nconst BreakpointProvider = ({ children, queries }) => {\r\n  const [queryMatch, setQueryMatch] = useState({});\r\n\r\n  //* our logic to get matching queries goes here\r\n  useEffect(() => {\r\n    const mediaQueryLists = {};\r\n    const keys = Object.keys(queries);\r\n    // let isAttached = false;\r\n\r\n    const handleQueryListener = () => {\r\n      const updateMatches = keys.reduce((acc, media) => {\r\n        acc[media] = !!(\r\n          mediaQueryLists[media] && mediaQueryLists[media].matches\r\n        );\r\n        return acc;\r\n      }, {});\r\n      setQueryMatch(updateMatches);\r\n    };\r\n    //! react state update before unmount//\r\n    if (window && window.matchMedia) {\r\n      const matches = {};\r\n      keys.forEach(media => {\r\n        if (typeof queries[media] === \"string\") {\r\n          mediaQueryLists[media] = window.matchMedia(queries[media]);\r\n          matches[media] = mediaQueryLists[media].matches;\r\n        } else {\r\n          matches[media] = false;\r\n        }\r\n      });\r\n      setQueryMatch(matches);\r\n      // isAttached = true;\r\n      keys.forEach(media => {\r\n        if (typeof queries[media] === \"string\") {\r\n          mediaQueryLists[media].addListener(handleQueryListener);\r\n        }\r\n      });\r\n    }\r\n  }, [queries]);\r\n\r\n  return (\r\n    //* const BreakpointProvider\r\n    <BreakpointContext.Provider value={queryMatch}>\r\n      {children}\r\n    </BreakpointContext.Provider>\r\n  );\r\n};\r\n\r\n//! fn > useBreakpoint() <= { useContext }\r\nfunction useBreakpoint() {\r\n  const context = useContext(BreakpointContext);\r\n  if (context === defaultValue) {\r\n    throw new Error(\"useBreakpoint must be used within BreakpointProvider\");\r\n  }\r\n  return context;\r\n}\r\nexport { useBreakpoint, BreakpointProvider };\r\n","// react hooks + react-router-dom + css\r\nimport { useState, useEffect } from \"react\";\r\nimport { Route, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport \"./SuccessPage.css\";\r\n// components\r\nimport Chat from \"../../coms/Chat/Chat\";\r\nimport Sidebar from \"../../coms/Sidebar/Sidebar\";\r\nimport ChatInfo from \"../../coms/ChatInfo/ChatInfo\";\r\nimport ToggleMobilePortal from \"../../coms/ToggleMobilePortal/ToggleMobilePortal\";\r\n// mql hooks\r\nimport { useBreakpoint } from \"../../IndexContextProvider/breakpoint\";\r\n\r\nconst SuccessPage = () => {\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n\r\n  const breakpoints = useBreakpoint();\r\n  // media-controlled rendered-coms\r\n  let isSm;\r\n  Object.keys(breakpoints).map(media => {\r\n    if (media === \"sm\" && breakpoints[media] === true) {\r\n      isSm = true;\r\n    }\r\n    return null;\r\n  });\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const onCloseModal = () => setIsOpen(false);\r\n\r\n  const LST = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    !LST && history.push(\"/\");\r\n  }, [LST, history]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"success\">\r\n        <div className=\"success__wrapper\">\r\n          <Sidebar path={path} />\r\n          <div className=\"chat\">\r\n            <Route exact path=\"/app\">\r\n              <ChatInfo />\r\n            </Route>\r\n            <Route exact path={`${path}/:roomId`}>\r\n              <Chat />\r\n            </Route>\r\n            {isSm && (\r\n              <ToggleMobilePortal isOpen={isOpen} onCloseModal={onCloseModal} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuccessPage;\r\n","// react hooks + css\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./NotFound.css\";\r\n// @material-ui\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst NotFound = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"notFound__container\">\r\n        <p className=\"error\">ERROR 404</p>\r\n        <p className=\"detail\">Page Not Found</p>\r\n        <Button className=\"google-btn\" onClick={() => history.push(\"/\")}>\r\n          Redirect to Homepage\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","// css\r\nimport \"./NotFoundPage.css\";\r\n// components\r\nimport NotFound from \"../../coms/NotFound/NotFound\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <>\r\n      <div className=\"notFound\">\r\n        <div className=\"notFound__wrapper\">\r\n          <NotFound />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","// react hooks + css\r\nimport { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Continue.css\";\r\n// @material-ui\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// firebase\r\nimport db from \"../../config/firebase\";\r\n// react contexts\r\nimport authContext from \"../../context/auth/authContext\";\r\n\r\nconst Continue = () => {\r\n  const history = useHistory();\r\n\r\n  const { user, writeUserInfo, resetAuth } = useContext(authContext);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\").onSnapshot(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        // test if LST match with any of logined-user\r\n        const LST = localStorage.getItem(\"token\");\r\n        // rewrite logined-user info into contexts\r\n        LST === doc.data().accessToken && writeUserInfo(doc.data());\r\n        return doc;\r\n      });\r\n    });\r\n  }, [writeUserInfo]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    resetAuth();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"continue__container\">\r\n        <Avatar className=\"avatar\" src={user && user.photoURL} />\r\n        <p className=\"name\">{user && user.displayName}</p>\r\n        <p className=\"email\">{user && user.email}</p>\r\n        <div className=\"buttons\">\r\n          <Button className=\"google-btn\" onClick={() => history.push(\"/app\")}>\r\n            Continue\r\n          </Button>\r\n          <Button className=\"google-btn\" onClick={signOut}>\r\n            Sign Out\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Continue;\r\n","// css\r\nimport './ContinuePage.css'\r\n// components\r\nimport Continue from \"../../coms/Continue/Continue\";\r\n\r\nconst ContinuePage = () => {\r\n  return (\r\n    <>\r\n      <div className=\"continue\">\r\n        <div className=\"continue__wrapper\">\r\n          <Continue />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContinuePage;\r\n","export const WRITE_USER_INFO = \"WRITE_USER_INFO\";\r\nexport const SET_LOGIN_STATUS = \"SET_LOGIN_STATUS\";\r\nexport const SET_ACCESS_TOKEN = \"SET_ACCESS_TOKEN\";\r\nexport const RESET_AUTH = \"RESET_AUTH\";\r\n\r\nexport const SET_ROOMS = \"SET_ROOMS\"\r\n\r\nexport const FILTER_CHATROOM = \"FILTER_CHATROOM\";\r\nexport const CLEAR_CHATROOM_FILTER = \"CLEAR_CHATROOM_FILTER\"\r\n\r\nexport const WRITE_CONTEXT_SEARCH_REF = \"WRITE_CONTEXT_SEARCH_REF\" \r\n\r\n","import {\r\n  SET_LOGIN_STATUS,\r\n  SET_ACCESS_TOKEN,\r\n  RESET_AUTH,\r\n  WRITE_USER_INFO,\r\n} from \"../types\";\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOGIN_STATUS:\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n      };\r\n    case SET_ACCESS_TOKEN:\r\n      return {\r\n        ...state,\r\n        accessToken: action.payload,\r\n      };\r\n    case WRITE_USER_INFO:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          accessToken: action.payload.accessToken,\r\n          displayName: action.payload.displayName,\r\n          email: action.payload.email,\r\n          photoURL: action.payload.photoURL,\r\n        },\r\n      };\r\n    case RESET_AUTH:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isLogin: false,\r\n        accessToken: null,\r\n      };\r\n    default:\r\n      throw Error(`Auth Reducer - Unhandled Action: ${action.type}`);\r\n  }\r\n};\r\nexport default authReducer;\r\n","import { useReducer } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport {\r\n  WRITE_USER_INFO,\r\n  SET_LOGIN_STATUS,\r\n  SET_ACCESS_TOKEN,\r\n  RESET_AUTH,\r\n} from \"../types\";\r\n\r\nconst AuthState = props => {\r\n  const initialState = {\r\n    user: {\r\n      accessToken: null,\r\n      displayName: null,\r\n      email: null,\r\n      photoURL: null,\r\n    },\r\n    isLogin: false,\r\n    accessToken: null,\r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  const writeUserInfo = user => {\r\n    dispatch({\r\n      type: WRITE_USER_INFO,\r\n      payload: user,\r\n    });\r\n    dispatch({\r\n      type: SET_LOGIN_STATUS,\r\n    });\r\n  };\r\n\r\n  const setAccessToken = accessToken => {\r\n    dispatch({\r\n      type: SET_ACCESS_TOKEN,\r\n      payload: accessToken,\r\n    });\r\n  };\r\n  \r\n  const resetAuth = () => {\r\n    dispatch({ type: RESET_AUTH });\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLogin: state.isLogin,\r\n        accessToken: state.accessToken,\r\n        user: state.user,\r\n        writeUserInfo,\r\n        setAccessToken,\r\n        resetAuth,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n","import {\r\n  SET_ROOMS,\r\n  FILTER_CHATROOM,\r\n  CLEAR_CHATROOM_FILTER,\r\n  WRITE_CONTEXT_SEARCH_REF,\r\n} from \"../types\";\r\n\r\nconst roomReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ROOMS:\r\n      return {\r\n        ...state,\r\n        rooms: action.payload,\r\n      };\r\n    case FILTER_CHATROOM:\r\n      return {\r\n        ...state,\r\n        filteredChatroom:\r\n          state.rooms &&\r\n          state.rooms.filter(room => {\r\n            const replaceText = action.payload.replace(/[^a-zA-Z0-9_-]/g, \"\");\r\n            const regex = new RegExp(`${replaceText}`, \"gi\");\r\n            return room.data.name.match(regex);\r\n          }),\r\n      };\r\n    case CLEAR_CHATROOM_FILTER:\r\n      return {\r\n        ...state,\r\n        filteredChatroom: null,\r\n      };\r\n    case WRITE_CONTEXT_SEARCH_REF:\r\n      return{\r\n        ...state,\r\n        searchRef: action.payload,\r\n      }\r\n    default:\r\n      throw Error(`Room Reducer - Unhandled Action: ${action.type}`);\r\n  }\r\n};\r\nexport default roomReducer;\r\n","import { useReducer } from \"react\";\r\nimport RoomContext from \"./roomContext\";\r\nimport RoomReducer from \"./roomReducer\";\r\nimport {\r\n  SET_ROOMS,\r\n  FILTER_CHATROOM,\r\n  CLEAR_CHATROOM_FILTER,\r\n  WRITE_CONTEXT_SEARCH_REF,\r\n} from \"../types\";\r\n\r\nconst RoomState = props => {\r\n  const initialState = {\r\n    rooms: null, // identify appended-format from db\r\n    filteredChatroom: null,\r\n    searchRef: null,\r\n  };\r\n  const [state, dispatch] = useReducer(RoomReducer, initialState);\r\n\r\n  const setRooms = rooms => {\r\n    dispatch({\r\n      type: SET_ROOMS,\r\n      payload: rooms,\r\n    });\r\n  };\r\n\r\n  const filterChatroom = onSearchText => {\r\n    dispatch({\r\n      type: FILTER_CHATROOM,\r\n      payload: onSearchText,\r\n    });\r\n  };\r\n\r\n  const clearChatroomFilter = () => {\r\n    dispatch({\r\n      type: CLEAR_CHATROOM_FILTER,\r\n    });\r\n  };\r\n\r\n  const writeContext_searchRef = searchRef => {\r\n    dispatch({\r\n      type: WRITE_CONTEXT_SEARCH_REF,\r\n      payload: searchRef,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <RoomContext.Provider\r\n      value={{\r\n        rooms: state.rooms,\r\n        filteredChatroom: state.filteredChatroom,\r\n        searchRef: state.searchRef,\r\n        writeContext_searchRef,\r\n        setRooms,\r\n        filterChatroom,\r\n        clearChatroomFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RoomContext.Provider>\r\n  );\r\n};\r\nexport default RoomState;\r\n","// react-router-dom + css\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n// components\nimport Navbar from \"./layout/Navbar\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport SuccessPage from \"./pages/SuccessPage/SuccessPage\";\nimport NotFoundPage from \"./pages/NotFoundPage/NotFoundPage\";\nimport ContinuePage from \"./pages/ContinuePage/ContinuePage\";\n// react contexts\nimport AuthState from \"./context/auth/AuthState\";\nimport RoomState from \"./context/room/RoomState\";\n\nconst App = () => {\n  return (\n    <>\n      <AuthState>\n        <RoomState>\n          <div className=\"app\">\n            <Router>\n              <div className=\"app__header\">\n                <div className=\"layout\">\n                  <Navbar />\n                </div>\n              </div>\n\n              <div className=\"app__body\">\n                <div className=\"page\">\n                  <Switch>\n                    <Route exact path=\"/\" component={LoginPage} />\n                    <Route path=\"/continue\" component={ContinuePage} />\n                    <Route path=\"/app\" component={SuccessPage} />\n                    <Route component={NotFoundPage} />\n                  </Switch>\n                </div>\n              </div>\n            </Router>\n          </div>\n        </RoomState>\n      </AuthState>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BreakpointProvider } from \"./IndexContextProvider/breakpoint\";\n\n\nconst queries = {\n  sm: \"(max-width: 625px)\",\n  or: '(orientation: portrait)',\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BreakpointProvider queries={queries}>\n      <App />\n    </BreakpointProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}